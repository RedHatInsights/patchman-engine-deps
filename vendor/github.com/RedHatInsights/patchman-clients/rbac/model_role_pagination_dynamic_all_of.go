/*
 * Role Based Access Control
 *
 * The API for Role Based Access Control.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rbac

import (
	"encoding/json"
)

// RolePaginationDynamicAllOf struct for RolePaginationDynamicAllOf
type RolePaginationDynamicAllOf struct {
	Data []RoleOutDynamic `json:"data"`
}

// NewRolePaginationDynamicAllOf instantiates a new RolePaginationDynamicAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolePaginationDynamicAllOf(data []RoleOutDynamic, ) *RolePaginationDynamicAllOf {
	this := RolePaginationDynamicAllOf{}
	this.Data = data
	return &this
}

// NewRolePaginationDynamicAllOfWithDefaults instantiates a new RolePaginationDynamicAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolePaginationDynamicAllOfWithDefaults() *RolePaginationDynamicAllOf {
	this := RolePaginationDynamicAllOf{}
	return &this
}

// GetData returns the Data field value
func (o *RolePaginationDynamicAllOf) GetData() []RoleOutDynamic {
	if o == nil  {
		var ret []RoleOutDynamic
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *RolePaginationDynamicAllOf) GetDataOk() (*[]RoleOutDynamic, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *RolePaginationDynamicAllOf) SetData(v []RoleOutDynamic) {
	o.Data = v
}

func (o RolePaginationDynamicAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableRolePaginationDynamicAllOf struct {
	value *RolePaginationDynamicAllOf
	isSet bool
}

func (v NullableRolePaginationDynamicAllOf) Get() *RolePaginationDynamicAllOf {
	return v.value
}

func (v *NullableRolePaginationDynamicAllOf) Set(val *RolePaginationDynamicAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRolePaginationDynamicAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRolePaginationDynamicAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolePaginationDynamicAllOf(val *RolePaginationDynamicAllOf) *NullableRolePaginationDynamicAllOf {
	return &NullableRolePaginationDynamicAllOf{value: val, isSet: true}
}

func (v NullableRolePaginationDynamicAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolePaginationDynamicAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


