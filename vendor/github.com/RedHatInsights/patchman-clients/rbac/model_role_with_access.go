/*
 * Role Based Access Control
 *
 * The API for Role Based Access Control.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rbac

import (
	"encoding/json"
)

// RoleWithAccess struct for RoleWithAccess
type RoleWithAccess struct {
	Name string `json:"name"`
	DisplayName *string `json:"display_name,omitempty"`
	Description *string `json:"description,omitempty"`
	Uuid string `json:"uuid"`
	Created string `json:"created"`
	Modified string `json:"modified"`
	PolicyCount *int32 `json:"policyCount,omitempty"`
	AccessCount *int32 `json:"accessCount,omitempty"`
	Applications *[]string `json:"applications,omitempty"`
	System *bool `json:"system,omitempty"`
	PlatformDefault *bool `json:"platform_default,omitempty"`
	Access []Access `json:"access"`
}

// NewRoleWithAccess instantiates a new RoleWithAccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleWithAccess(name string, uuid string, created string, modified string, access []Access, ) *RoleWithAccess {
	this := RoleWithAccess{}
	this.Name = name
	this.Uuid = uuid
	this.Created = created
	this.Modified = modified
	var system bool = false
	this.System = &system
	var platformDefault bool = false
	this.PlatformDefault = &platformDefault
	this.Access = access
	return &this
}

// NewRoleWithAccessWithDefaults instantiates a new RoleWithAccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleWithAccessWithDefaults() *RoleWithAccess {
	this := RoleWithAccess{}
	var system bool = false
	this.System = &system
	var platformDefault bool = false
	this.PlatformDefault = &platformDefault
	return &this
}

// GetName returns the Name field value
func (o *RoleWithAccess) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RoleWithAccess) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RoleWithAccess) SetName(v string) {
	o.Name = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *RoleWithAccess) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleWithAccess) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *RoleWithAccess) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *RoleWithAccess) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoleWithAccess) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleWithAccess) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoleWithAccess) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoleWithAccess) SetDescription(v string) {
	o.Description = &v
}

// GetUuid returns the Uuid field value
func (o *RoleWithAccess) GetUuid() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *RoleWithAccess) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *RoleWithAccess) SetUuid(v string) {
	o.Uuid = v
}

// GetCreated returns the Created field value
func (o *RoleWithAccess) GetCreated() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *RoleWithAccess) GetCreatedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *RoleWithAccess) SetCreated(v string) {
	o.Created = v
}

// GetModified returns the Modified field value
func (o *RoleWithAccess) GetModified() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *RoleWithAccess) GetModifiedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *RoleWithAccess) SetModified(v string) {
	o.Modified = v
}

// GetPolicyCount returns the PolicyCount field value if set, zero value otherwise.
func (o *RoleWithAccess) GetPolicyCount() int32 {
	if o == nil || o.PolicyCount == nil {
		var ret int32
		return ret
	}
	return *o.PolicyCount
}

// GetPolicyCountOk returns a tuple with the PolicyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleWithAccess) GetPolicyCountOk() (*int32, bool) {
	if o == nil || o.PolicyCount == nil {
		return nil, false
	}
	return o.PolicyCount, true
}

// HasPolicyCount returns a boolean if a field has been set.
func (o *RoleWithAccess) HasPolicyCount() bool {
	if o != nil && o.PolicyCount != nil {
		return true
	}

	return false
}

// SetPolicyCount gets a reference to the given int32 and assigns it to the PolicyCount field.
func (o *RoleWithAccess) SetPolicyCount(v int32) {
	o.PolicyCount = &v
}

// GetAccessCount returns the AccessCount field value if set, zero value otherwise.
func (o *RoleWithAccess) GetAccessCount() int32 {
	if o == nil || o.AccessCount == nil {
		var ret int32
		return ret
	}
	return *o.AccessCount
}

// GetAccessCountOk returns a tuple with the AccessCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleWithAccess) GetAccessCountOk() (*int32, bool) {
	if o == nil || o.AccessCount == nil {
		return nil, false
	}
	return o.AccessCount, true
}

// HasAccessCount returns a boolean if a field has been set.
func (o *RoleWithAccess) HasAccessCount() bool {
	if o != nil && o.AccessCount != nil {
		return true
	}

	return false
}

// SetAccessCount gets a reference to the given int32 and assigns it to the AccessCount field.
func (o *RoleWithAccess) SetAccessCount(v int32) {
	o.AccessCount = &v
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *RoleWithAccess) GetApplications() []string {
	if o == nil || o.Applications == nil {
		var ret []string
		return ret
	}
	return *o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleWithAccess) GetApplicationsOk() (*[]string, bool) {
	if o == nil || o.Applications == nil {
		return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *RoleWithAccess) HasApplications() bool {
	if o != nil && o.Applications != nil {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []string and assigns it to the Applications field.
func (o *RoleWithAccess) SetApplications(v []string) {
	o.Applications = &v
}

// GetSystem returns the System field value if set, zero value otherwise.
func (o *RoleWithAccess) GetSystem() bool {
	if o == nil || o.System == nil {
		var ret bool
		return ret
	}
	return *o.System
}

// GetSystemOk returns a tuple with the System field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleWithAccess) GetSystemOk() (*bool, bool) {
	if o == nil || o.System == nil {
		return nil, false
	}
	return o.System, true
}

// HasSystem returns a boolean if a field has been set.
func (o *RoleWithAccess) HasSystem() bool {
	if o != nil && o.System != nil {
		return true
	}

	return false
}

// SetSystem gets a reference to the given bool and assigns it to the System field.
func (o *RoleWithAccess) SetSystem(v bool) {
	o.System = &v
}

// GetPlatformDefault returns the PlatformDefault field value if set, zero value otherwise.
func (o *RoleWithAccess) GetPlatformDefault() bool {
	if o == nil || o.PlatformDefault == nil {
		var ret bool
		return ret
	}
	return *o.PlatformDefault
}

// GetPlatformDefaultOk returns a tuple with the PlatformDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleWithAccess) GetPlatformDefaultOk() (*bool, bool) {
	if o == nil || o.PlatformDefault == nil {
		return nil, false
	}
	return o.PlatformDefault, true
}

// HasPlatformDefault returns a boolean if a field has been set.
func (o *RoleWithAccess) HasPlatformDefault() bool {
	if o != nil && o.PlatformDefault != nil {
		return true
	}

	return false
}

// SetPlatformDefault gets a reference to the given bool and assigns it to the PlatformDefault field.
func (o *RoleWithAccess) SetPlatformDefault(v bool) {
	o.PlatformDefault = &v
}

// GetAccess returns the Access field value
func (o *RoleWithAccess) GetAccess() []Access {
	if o == nil  {
		var ret []Access
		return ret
	}

	return o.Access
}

// GetAccessOk returns a tuple with the Access field value
// and a boolean to check if the value has been set.
func (o *RoleWithAccess) GetAccessOk() (*[]Access, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Access, true
}

// SetAccess sets field value
func (o *RoleWithAccess) SetAccess(v []Access) {
	o.Access = v
}

func (o RoleWithAccess) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["modified"] = o.Modified
	}
	if o.PolicyCount != nil {
		toSerialize["policyCount"] = o.PolicyCount
	}
	if o.AccessCount != nil {
		toSerialize["accessCount"] = o.AccessCount
	}
	if o.Applications != nil {
		toSerialize["applications"] = o.Applications
	}
	if o.System != nil {
		toSerialize["system"] = o.System
	}
	if o.PlatformDefault != nil {
		toSerialize["platform_default"] = o.PlatformDefault
	}
	if true {
		toSerialize["access"] = o.Access
	}
	return json.Marshal(toSerialize)
}

type NullableRoleWithAccess struct {
	value *RoleWithAccess
	isSet bool
}

func (v NullableRoleWithAccess) Get() *RoleWithAccess {
	return v.value
}

func (v *NullableRoleWithAccess) Set(val *RoleWithAccess) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleWithAccess) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleWithAccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleWithAccess(val *RoleWithAccess) *NullableRoleWithAccess {
	return &NullableRoleWithAccess{value: val, isSet: true}
}

func (v NullableRoleWithAccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleWithAccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


