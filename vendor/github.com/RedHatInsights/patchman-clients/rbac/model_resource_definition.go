/*
 * Role Based Access Control
 *
 * The API for Role Based Access Control.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rbac

import (
	"encoding/json"
)

// ResourceDefinition struct for ResourceDefinition
type ResourceDefinition struct {
	AttributeFilter ResourceDefinitionFilter `json:"attributeFilter"`
}

// NewResourceDefinition instantiates a new ResourceDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceDefinition(attributeFilter ResourceDefinitionFilter, ) *ResourceDefinition {
	this := ResourceDefinition{}
	this.AttributeFilter = attributeFilter
	return &this
}

// NewResourceDefinitionWithDefaults instantiates a new ResourceDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceDefinitionWithDefaults() *ResourceDefinition {
	this := ResourceDefinition{}
	return &this
}

// GetAttributeFilter returns the AttributeFilter field value
func (o *ResourceDefinition) GetAttributeFilter() ResourceDefinitionFilter {
	if o == nil  {
		var ret ResourceDefinitionFilter
		return ret
	}

	return o.AttributeFilter
}

// GetAttributeFilterOk returns a tuple with the AttributeFilter field value
// and a boolean to check if the value has been set.
func (o *ResourceDefinition) GetAttributeFilterOk() (*ResourceDefinitionFilter, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AttributeFilter, true
}

// SetAttributeFilter sets field value
func (o *ResourceDefinition) SetAttributeFilter(v ResourceDefinitionFilter) {
	o.AttributeFilter = v
}

func (o ResourceDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["attributeFilter"] = o.AttributeFilter
	}
	return json.Marshal(toSerialize)
}

type NullableResourceDefinition struct {
	value *ResourceDefinition
	isSet bool
}

func (v NullableResourceDefinition) Get() *ResourceDefinition {
	return v.value
}

func (v *NullableResourceDefinition) Set(val *ResourceDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceDefinition(val *ResourceDefinition) *NullableResourceDefinition {
	return &NullableResourceDefinition{value: val, isSet: true}
}

func (v NullableResourceDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


