/*
 * Role Based Access Control
 *
 * The API for Role Based Access Control.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rbac

import (
	"encoding/json"
)

// CrossAccountRequestIn struct for CrossAccountRequestIn
type CrossAccountRequestIn struct {
	TargetAccount string `json:"target_account"`
	StartDate string `json:"start_date"`
	EndDate string `json:"end_date"`
	Roles []string `json:"roles"`
}

// NewCrossAccountRequestIn instantiates a new CrossAccountRequestIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrossAccountRequestIn(targetAccount string, startDate string, endDate string, roles []string, ) *CrossAccountRequestIn {
	this := CrossAccountRequestIn{}
	this.TargetAccount = targetAccount
	this.StartDate = startDate
	this.EndDate = endDate
	this.Roles = roles
	return &this
}

// NewCrossAccountRequestInWithDefaults instantiates a new CrossAccountRequestIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrossAccountRequestInWithDefaults() *CrossAccountRequestIn {
	this := CrossAccountRequestIn{}
	return &this
}

// GetTargetAccount returns the TargetAccount field value
func (o *CrossAccountRequestIn) GetTargetAccount() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.TargetAccount
}

// GetTargetAccountOk returns a tuple with the TargetAccount field value
// and a boolean to check if the value has been set.
func (o *CrossAccountRequestIn) GetTargetAccountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TargetAccount, true
}

// SetTargetAccount sets field value
func (o *CrossAccountRequestIn) SetTargetAccount(v string) {
	o.TargetAccount = v
}

// GetStartDate returns the StartDate field value
func (o *CrossAccountRequestIn) GetStartDate() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *CrossAccountRequestIn) GetStartDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *CrossAccountRequestIn) SetStartDate(v string) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *CrossAccountRequestIn) GetEndDate() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *CrossAccountRequestIn) GetEndDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *CrossAccountRequestIn) SetEndDate(v string) {
	o.EndDate = v
}

// GetRoles returns the Roles field value
func (o *CrossAccountRequestIn) GetRoles() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
func (o *CrossAccountRequestIn) GetRolesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Roles, true
}

// SetRoles sets field value
func (o *CrossAccountRequestIn) SetRoles(v []string) {
	o.Roles = v
}

func (o CrossAccountRequestIn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["target_account"] = o.TargetAccount
	}
	if true {
		toSerialize["start_date"] = o.StartDate
	}
	if true {
		toSerialize["end_date"] = o.EndDate
	}
	if true {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableCrossAccountRequestIn struct {
	value *CrossAccountRequestIn
	isSet bool
}

func (v NullableCrossAccountRequestIn) Get() *CrossAccountRequestIn {
	return v.value
}

func (v *NullableCrossAccountRequestIn) Set(val *CrossAccountRequestIn) {
	v.value = val
	v.isSet = true
}

func (v NullableCrossAccountRequestIn) IsSet() bool {
	return v.isSet
}

func (v *NullableCrossAccountRequestIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrossAccountRequestIn(val *CrossAccountRequestIn) *NullableCrossAccountRequestIn {
	return &NullableCrossAccountRequestIn{value: val, isSet: true}
}

func (v NullableCrossAccountRequestIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrossAccountRequestIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


