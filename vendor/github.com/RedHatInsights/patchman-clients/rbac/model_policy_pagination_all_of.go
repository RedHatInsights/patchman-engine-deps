/*
 * Role Based Access Control
 *
 * The API for Role Based Access Control.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rbac

import (
	"encoding/json"
)

// PolicyPaginationAllOf struct for PolicyPaginationAllOf
type PolicyPaginationAllOf struct {
	Data []PolicyExtended `json:"data"`
}

// NewPolicyPaginationAllOf instantiates a new PolicyPaginationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyPaginationAllOf(data []PolicyExtended, ) *PolicyPaginationAllOf {
	this := PolicyPaginationAllOf{}
	this.Data = data
	return &this
}

// NewPolicyPaginationAllOfWithDefaults instantiates a new PolicyPaginationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyPaginationAllOfWithDefaults() *PolicyPaginationAllOf {
	this := PolicyPaginationAllOf{}
	return &this
}

// GetData returns the Data field value
func (o *PolicyPaginationAllOf) GetData() []PolicyExtended {
	if o == nil  {
		var ret []PolicyExtended
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *PolicyPaginationAllOf) GetDataOk() (*[]PolicyExtended, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *PolicyPaginationAllOf) SetData(v []PolicyExtended) {
	o.Data = v
}

func (o PolicyPaginationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyPaginationAllOf struct {
	value *PolicyPaginationAllOf
	isSet bool
}

func (v NullablePolicyPaginationAllOf) Get() *PolicyPaginationAllOf {
	return v.value
}

func (v *NullablePolicyPaginationAllOf) Set(val *PolicyPaginationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyPaginationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyPaginationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyPaginationAllOf(val *PolicyPaginationAllOf) *NullablePolicyPaginationAllOf {
	return &NullablePolicyPaginationAllOf{value: val, isSet: true}
}

func (v NullablePolicyPaginationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyPaginationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


