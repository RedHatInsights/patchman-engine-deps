/*
 * Role Based Access Control
 *
 * The API for Role Based Access Control.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rbac

import (
	"encoding/json"
)

// CrossAccountRequestDetailByAccountAllOf struct for CrossAccountRequestDetailByAccountAllOf
type CrossAccountRequestDetailByAccountAllOf struct {
	FirstName interface{} `json:"first_name,omitempty"`
	LastName interface{} `json:"last_name,omitempty"`
	Email interface{} `json:"email,omitempty"`
}

// NewCrossAccountRequestDetailByAccountAllOf instantiates a new CrossAccountRequestDetailByAccountAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrossAccountRequestDetailByAccountAllOf() *CrossAccountRequestDetailByAccountAllOf {
	this := CrossAccountRequestDetailByAccountAllOf{}
	return &this
}

// NewCrossAccountRequestDetailByAccountAllOfWithDefaults instantiates a new CrossAccountRequestDetailByAccountAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrossAccountRequestDetailByAccountAllOfWithDefaults() *CrossAccountRequestDetailByAccountAllOf {
	this := CrossAccountRequestDetailByAccountAllOf{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrossAccountRequestDetailByAccountAllOf) GetFirstName() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrossAccountRequestDetailByAccountAllOf) GetFirstNameOk() (*interface{}, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *CrossAccountRequestDetailByAccountAllOf) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given interface{} and assigns it to the FirstName field.
func (o *CrossAccountRequestDetailByAccountAllOf) SetFirstName(v interface{}) {
	o.FirstName = v
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrossAccountRequestDetailByAccountAllOf) GetLastName() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrossAccountRequestDetailByAccountAllOf) GetLastNameOk() (*interface{}, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return &o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *CrossAccountRequestDetailByAccountAllOf) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given interface{} and assigns it to the LastName field.
func (o *CrossAccountRequestDetailByAccountAllOf) SetLastName(v interface{}) {
	o.LastName = v
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrossAccountRequestDetailByAccountAllOf) GetEmail() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrossAccountRequestDetailByAccountAllOf) GetEmailOk() (*interface{}, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return &o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *CrossAccountRequestDetailByAccountAllOf) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given interface{} and assigns it to the Email field.
func (o *CrossAccountRequestDetailByAccountAllOf) SetEmail(v interface{}) {
	o.Email = v
}

func (o CrossAccountRequestDetailByAccountAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FirstName != nil {
		toSerialize["first_name"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["last_name"] = o.LastName
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableCrossAccountRequestDetailByAccountAllOf struct {
	value *CrossAccountRequestDetailByAccountAllOf
	isSet bool
}

func (v NullableCrossAccountRequestDetailByAccountAllOf) Get() *CrossAccountRequestDetailByAccountAllOf {
	return v.value
}

func (v *NullableCrossAccountRequestDetailByAccountAllOf) Set(val *CrossAccountRequestDetailByAccountAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCrossAccountRequestDetailByAccountAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCrossAccountRequestDetailByAccountAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrossAccountRequestDetailByAccountAllOf(val *CrossAccountRequestDetailByAccountAllOf) *NullableCrossAccountRequestDetailByAccountAllOf {
	return &NullableCrossAccountRequestDetailByAccountAllOf{value: val, isSet: true}
}

func (v NullableCrossAccountRequestDetailByAccountAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrossAccountRequestDetailByAccountAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


