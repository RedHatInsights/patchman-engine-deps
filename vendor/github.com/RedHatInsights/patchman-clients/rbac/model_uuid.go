/*
 * Role Based Access Control
 *
 * The API for Role Based Access Control.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rbac

import (
	"encoding/json"
)

// UUID struct for UUID
type UUID struct {
	Uuid string `json:"uuid"`
}

// NewUUID instantiates a new UUID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUUID(uuid string, ) *UUID {
	this := UUID{}
	this.Uuid = uuid
	return &this
}

// NewUUIDWithDefaults instantiates a new UUID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUUIDWithDefaults() *UUID {
	this := UUID{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *UUID) GetUuid() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *UUID) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *UUID) SetUuid(v string) {
	o.Uuid = v
}

func (o UUID) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableUUID struct {
	value *UUID
	isSet bool
}

func (v NullableUUID) Get() *UUID {
	return v.value
}

func (v *NullableUUID) Set(val *UUID) {
	v.value = val
	v.isSet = true
}

func (v NullableUUID) IsSet() bool {
	return v.isSet
}

func (v *NullableUUID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUUID(val *UUID) *NullableUUID {
	return &NullableUUID{value: val, isSet: true}
}

func (v NullableUUID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUUID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


