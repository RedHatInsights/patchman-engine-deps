/*
 * Role Based Access Control
 *
 * The API for Role Based Access Control.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rbac

import (
	"encoding/json"
)

// CrossAccountRequestUpdateIn struct for CrossAccountRequestUpdateIn
type CrossAccountRequestUpdateIn struct {
	StartDate string `json:"start_date"`
	EndDate string `json:"end_date"`
	Roles []string `json:"roles"`
	Status *string `json:"status,omitempty"`
}

// NewCrossAccountRequestUpdateIn instantiates a new CrossAccountRequestUpdateIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrossAccountRequestUpdateIn(startDate string, endDate string, roles []string, ) *CrossAccountRequestUpdateIn {
	this := CrossAccountRequestUpdateIn{}
	this.StartDate = startDate
	this.EndDate = endDate
	this.Roles = roles
	return &this
}

// NewCrossAccountRequestUpdateInWithDefaults instantiates a new CrossAccountRequestUpdateIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrossAccountRequestUpdateInWithDefaults() *CrossAccountRequestUpdateIn {
	this := CrossAccountRequestUpdateIn{}
	return &this
}

// GetStartDate returns the StartDate field value
func (o *CrossAccountRequestUpdateIn) GetStartDate() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *CrossAccountRequestUpdateIn) GetStartDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *CrossAccountRequestUpdateIn) SetStartDate(v string) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *CrossAccountRequestUpdateIn) GetEndDate() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *CrossAccountRequestUpdateIn) GetEndDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *CrossAccountRequestUpdateIn) SetEndDate(v string) {
	o.EndDate = v
}

// GetRoles returns the Roles field value
func (o *CrossAccountRequestUpdateIn) GetRoles() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
func (o *CrossAccountRequestUpdateIn) GetRolesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Roles, true
}

// SetRoles sets field value
func (o *CrossAccountRequestUpdateIn) SetRoles(v []string) {
	o.Roles = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CrossAccountRequestUpdateIn) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrossAccountRequestUpdateIn) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CrossAccountRequestUpdateIn) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CrossAccountRequestUpdateIn) SetStatus(v string) {
	o.Status = &v
}

func (o CrossAccountRequestUpdateIn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["start_date"] = o.StartDate
	}
	if true {
		toSerialize["end_date"] = o.EndDate
	}
	if true {
		toSerialize["roles"] = o.Roles
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableCrossAccountRequestUpdateIn struct {
	value *CrossAccountRequestUpdateIn
	isSet bool
}

func (v NullableCrossAccountRequestUpdateIn) Get() *CrossAccountRequestUpdateIn {
	return v.value
}

func (v *NullableCrossAccountRequestUpdateIn) Set(val *CrossAccountRequestUpdateIn) {
	v.value = val
	v.isSet = true
}

func (v NullableCrossAccountRequestUpdateIn) IsSet() bool {
	return v.isSet
}

func (v *NullableCrossAccountRequestUpdateIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrossAccountRequestUpdateIn(val *CrossAccountRequestUpdateIn) *NullableCrossAccountRequestUpdateIn {
	return &NullableCrossAccountRequestUpdateIn{value: val, isSet: true}
}

func (v NullableCrossAccountRequestUpdateIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrossAccountRequestUpdateIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


