/*
 * Role Based Access Control
 *
 * The API for Role Based Access Control.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rbac

import (
	"encoding/json"
)

// PrincipalPaginationAllOf struct for PrincipalPaginationAllOf
type PrincipalPaginationAllOf struct {
	Data []Principal `json:"data"`
}

// NewPrincipalPaginationAllOf instantiates a new PrincipalPaginationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrincipalPaginationAllOf(data []Principal, ) *PrincipalPaginationAllOf {
	this := PrincipalPaginationAllOf{}
	this.Data = data
	return &this
}

// NewPrincipalPaginationAllOfWithDefaults instantiates a new PrincipalPaginationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrincipalPaginationAllOfWithDefaults() *PrincipalPaginationAllOf {
	this := PrincipalPaginationAllOf{}
	return &this
}

// GetData returns the Data field value
func (o *PrincipalPaginationAllOf) GetData() []Principal {
	if o == nil  {
		var ret []Principal
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *PrincipalPaginationAllOf) GetDataOk() (*[]Principal, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *PrincipalPaginationAllOf) SetData(v []Principal) {
	o.Data = v
}

func (o PrincipalPaginationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullablePrincipalPaginationAllOf struct {
	value *PrincipalPaginationAllOf
	isSet bool
}

func (v NullablePrincipalPaginationAllOf) Get() *PrincipalPaginationAllOf {
	return v.value
}

func (v *NullablePrincipalPaginationAllOf) Set(val *PrincipalPaginationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePrincipalPaginationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePrincipalPaginationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrincipalPaginationAllOf(val *PrincipalPaginationAllOf) *NullablePrincipalPaginationAllOf {
	return &NullablePrincipalPaginationAllOf{value: val, isSet: true}
}

func (v NullablePrincipalPaginationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrincipalPaginationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


