/*
 * VMaaS Webapp
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.27.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vmaas

import (
	"encoding/json"
)

// PkgTreeItemErrata struct for PkgTreeItemErrata
type PkgTreeItemErrata struct {
	Name string `json:"name"`
	Issued string `json:"issued"`
	Updated *string `json:"updated,omitempty"`
	CveList *[]string `json:"cve_list,omitempty"`
}

// NewPkgTreeItemErrata instantiates a new PkgTreeItemErrata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkgTreeItemErrata(name string, issued string, ) *PkgTreeItemErrata {
	this := PkgTreeItemErrata{}
	this.Name = name
	this.Issued = issued
	return &this
}

// NewPkgTreeItemErrataWithDefaults instantiates a new PkgTreeItemErrata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkgTreeItemErrataWithDefaults() *PkgTreeItemErrata {
	this := PkgTreeItemErrata{}
	return &this
}

// GetName returns the Name field value
func (o *PkgTreeItemErrata) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PkgTreeItemErrata) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PkgTreeItemErrata) SetName(v string) {
	o.Name = v
}

// GetIssued returns the Issued field value
func (o *PkgTreeItemErrata) GetIssued() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Issued
}

// GetIssuedOk returns a tuple with the Issued field value
// and a boolean to check if the value has been set.
func (o *PkgTreeItemErrata) GetIssuedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Issued, true
}

// SetIssued sets field value
func (o *PkgTreeItemErrata) SetIssued(v string) {
	o.Issued = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *PkgTreeItemErrata) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgTreeItemErrata) GetUpdatedOk() (*string, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *PkgTreeItemErrata) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *PkgTreeItemErrata) SetUpdated(v string) {
	o.Updated = &v
}

// GetCveList returns the CveList field value if set, zero value otherwise.
func (o *PkgTreeItemErrata) GetCveList() []string {
	if o == nil || o.CveList == nil {
		var ret []string
		return ret
	}
	return *o.CveList
}

// GetCveListOk returns a tuple with the CveList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgTreeItemErrata) GetCveListOk() (*[]string, bool) {
	if o == nil || o.CveList == nil {
		return nil, false
	}
	return o.CveList, true
}

// HasCveList returns a boolean if a field has been set.
func (o *PkgTreeItemErrata) HasCveList() bool {
	if o != nil && o.CveList != nil {
		return true
	}

	return false
}

// SetCveList gets a reference to the given []string and assigns it to the CveList field.
func (o *PkgTreeItemErrata) SetCveList(v []string) {
	o.CveList = &v
}

func (o PkgTreeItemErrata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["issued"] = o.Issued
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.CveList != nil {
		toSerialize["cve_list"] = o.CveList
	}
	return json.Marshal(toSerialize)
}

type NullablePkgTreeItemErrata struct {
	value *PkgTreeItemErrata
	isSet bool
}

func (v NullablePkgTreeItemErrata) Get() *PkgTreeItemErrata {
	return v.value
}

func (v *NullablePkgTreeItemErrata) Set(val *PkgTreeItemErrata) {
	v.value = val
	v.isSet = true
}

func (v NullablePkgTreeItemErrata) IsSet() bool {
	return v.isSet
}

func (v *NullablePkgTreeItemErrata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkgTreeItemErrata(val *PkgTreeItemErrata) *NullablePkgTreeItemErrata {
	return &NullablePkgTreeItemErrata{value: val, isSet: true}
}

func (v NullablePkgTreeItemErrata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkgTreeItemErrata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


