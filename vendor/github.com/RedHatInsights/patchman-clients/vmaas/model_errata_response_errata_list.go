/*
 * VMaaS Webapp
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.27.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vmaas

import (
	"encoding/json"
)

// ErrataResponseErrataList struct for ErrataResponseErrataList
type ErrataResponseErrataList struct {
	Updated *string `json:"updated,omitempty"`
	Severity NullableString `json:"severity,omitempty"`
	ReferenceList *[]string `json:"reference_list,omitempty"`
	Issued *string `json:"issued,omitempty"`
	Description *string `json:"description,omitempty"`
	Solution *string `json:"solution,omitempty"`
	Summary *string `json:"summary,omitempty"`
	Url *string `json:"url,omitempty"`
	Synopsis *string `json:"synopsis,omitempty"`
	CveList *[]string `json:"cve_list,omitempty"`
	BugzillaList *[]string `json:"bugzilla_list,omitempty"`
	PackageList *[]string `json:"package_list,omitempty"`
	SourcePackageList *[]string `json:"source_package_list,omitempty"`
	Type *string `json:"type,omitempty"`
	ThirdParty *bool `json:"third_party,omitempty"`
	RequiresReboot *bool `json:"requires_reboot,omitempty"`
}

// NewErrataResponseErrataList instantiates a new ErrataResponseErrataList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrataResponseErrataList() *ErrataResponseErrataList {
	this := ErrataResponseErrataList{}
	return &this
}

// NewErrataResponseErrataListWithDefaults instantiates a new ErrataResponseErrataList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrataResponseErrataListWithDefaults() *ErrataResponseErrataList {
	this := ErrataResponseErrataList{}
	return &this
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetUpdatedOk() (*string, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *ErrataResponseErrataList) SetUpdated(v string) {
	o.Updated = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ErrataResponseErrataList) GetSeverity() string {
	if o == nil || o.Severity.Get() == nil {
		var ret string
		return ret
	}
	return *o.Severity.Get()
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ErrataResponseErrataList) GetSeverityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Severity.Get(), o.Severity.IsSet()
}

// HasSeverity returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasSeverity() bool {
	if o != nil && o.Severity.IsSet() {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given NullableString and assigns it to the Severity field.
func (o *ErrataResponseErrataList) SetSeverity(v string) {
	o.Severity.Set(&v)
}
// SetSeverityNil sets the value for Severity to be an explicit nil
func (o *ErrataResponseErrataList) SetSeverityNil() {
	o.Severity.Set(nil)
}

// UnsetSeverity ensures that no value is present for Severity, not even an explicit nil
func (o *ErrataResponseErrataList) UnsetSeverity() {
	o.Severity.Unset()
}

// GetReferenceList returns the ReferenceList field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetReferenceList() []string {
	if o == nil || o.ReferenceList == nil {
		var ret []string
		return ret
	}
	return *o.ReferenceList
}

// GetReferenceListOk returns a tuple with the ReferenceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetReferenceListOk() (*[]string, bool) {
	if o == nil || o.ReferenceList == nil {
		return nil, false
	}
	return o.ReferenceList, true
}

// HasReferenceList returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasReferenceList() bool {
	if o != nil && o.ReferenceList != nil {
		return true
	}

	return false
}

// SetReferenceList gets a reference to the given []string and assigns it to the ReferenceList field.
func (o *ErrataResponseErrataList) SetReferenceList(v []string) {
	o.ReferenceList = &v
}

// GetIssued returns the Issued field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetIssued() string {
	if o == nil || o.Issued == nil {
		var ret string
		return ret
	}
	return *o.Issued
}

// GetIssuedOk returns a tuple with the Issued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetIssuedOk() (*string, bool) {
	if o == nil || o.Issued == nil {
		return nil, false
	}
	return o.Issued, true
}

// HasIssued returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasIssued() bool {
	if o != nil && o.Issued != nil {
		return true
	}

	return false
}

// SetIssued gets a reference to the given string and assigns it to the Issued field.
func (o *ErrataResponseErrataList) SetIssued(v string) {
	o.Issued = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ErrataResponseErrataList) SetDescription(v string) {
	o.Description = &v
}

// GetSolution returns the Solution field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetSolution() string {
	if o == nil || o.Solution == nil {
		var ret string
		return ret
	}
	return *o.Solution
}

// GetSolutionOk returns a tuple with the Solution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetSolutionOk() (*string, bool) {
	if o == nil || o.Solution == nil {
		return nil, false
	}
	return o.Solution, true
}

// HasSolution returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasSolution() bool {
	if o != nil && o.Solution != nil {
		return true
	}

	return false
}

// SetSolution gets a reference to the given string and assigns it to the Solution field.
func (o *ErrataResponseErrataList) SetSolution(v string) {
	o.Solution = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetSummary() string {
	if o == nil || o.Summary == nil {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetSummaryOk() (*string, bool) {
	if o == nil || o.Summary == nil {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasSummary() bool {
	if o != nil && o.Summary != nil {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *ErrataResponseErrataList) SetSummary(v string) {
	o.Summary = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ErrataResponseErrataList) SetUrl(v string) {
	o.Url = &v
}

// GetSynopsis returns the Synopsis field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetSynopsis() string {
	if o == nil || o.Synopsis == nil {
		var ret string
		return ret
	}
	return *o.Synopsis
}

// GetSynopsisOk returns a tuple with the Synopsis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetSynopsisOk() (*string, bool) {
	if o == nil || o.Synopsis == nil {
		return nil, false
	}
	return o.Synopsis, true
}

// HasSynopsis returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasSynopsis() bool {
	if o != nil && o.Synopsis != nil {
		return true
	}

	return false
}

// SetSynopsis gets a reference to the given string and assigns it to the Synopsis field.
func (o *ErrataResponseErrataList) SetSynopsis(v string) {
	o.Synopsis = &v
}

// GetCveList returns the CveList field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetCveList() []string {
	if o == nil || o.CveList == nil {
		var ret []string
		return ret
	}
	return *o.CveList
}

// GetCveListOk returns a tuple with the CveList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetCveListOk() (*[]string, bool) {
	if o == nil || o.CveList == nil {
		return nil, false
	}
	return o.CveList, true
}

// HasCveList returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasCveList() bool {
	if o != nil && o.CveList != nil {
		return true
	}

	return false
}

// SetCveList gets a reference to the given []string and assigns it to the CveList field.
func (o *ErrataResponseErrataList) SetCveList(v []string) {
	o.CveList = &v
}

// GetBugzillaList returns the BugzillaList field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetBugzillaList() []string {
	if o == nil || o.BugzillaList == nil {
		var ret []string
		return ret
	}
	return *o.BugzillaList
}

// GetBugzillaListOk returns a tuple with the BugzillaList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetBugzillaListOk() (*[]string, bool) {
	if o == nil || o.BugzillaList == nil {
		return nil, false
	}
	return o.BugzillaList, true
}

// HasBugzillaList returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasBugzillaList() bool {
	if o != nil && o.BugzillaList != nil {
		return true
	}

	return false
}

// SetBugzillaList gets a reference to the given []string and assigns it to the BugzillaList field.
func (o *ErrataResponseErrataList) SetBugzillaList(v []string) {
	o.BugzillaList = &v
}

// GetPackageList returns the PackageList field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetPackageList() []string {
	if o == nil || o.PackageList == nil {
		var ret []string
		return ret
	}
	return *o.PackageList
}

// GetPackageListOk returns a tuple with the PackageList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetPackageListOk() (*[]string, bool) {
	if o == nil || o.PackageList == nil {
		return nil, false
	}
	return o.PackageList, true
}

// HasPackageList returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasPackageList() bool {
	if o != nil && o.PackageList != nil {
		return true
	}

	return false
}

// SetPackageList gets a reference to the given []string and assigns it to the PackageList field.
func (o *ErrataResponseErrataList) SetPackageList(v []string) {
	o.PackageList = &v
}

// GetSourcePackageList returns the SourcePackageList field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetSourcePackageList() []string {
	if o == nil || o.SourcePackageList == nil {
		var ret []string
		return ret
	}
	return *o.SourcePackageList
}

// GetSourcePackageListOk returns a tuple with the SourcePackageList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetSourcePackageListOk() (*[]string, bool) {
	if o == nil || o.SourcePackageList == nil {
		return nil, false
	}
	return o.SourcePackageList, true
}

// HasSourcePackageList returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasSourcePackageList() bool {
	if o != nil && o.SourcePackageList != nil {
		return true
	}

	return false
}

// SetSourcePackageList gets a reference to the given []string and assigns it to the SourcePackageList field.
func (o *ErrataResponseErrataList) SetSourcePackageList(v []string) {
	o.SourcePackageList = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ErrataResponseErrataList) SetType(v string) {
	o.Type = &v
}

// GetThirdParty returns the ThirdParty field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetThirdParty() bool {
	if o == nil || o.ThirdParty == nil {
		var ret bool
		return ret
	}
	return *o.ThirdParty
}

// GetThirdPartyOk returns a tuple with the ThirdParty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetThirdPartyOk() (*bool, bool) {
	if o == nil || o.ThirdParty == nil {
		return nil, false
	}
	return o.ThirdParty, true
}

// HasThirdParty returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasThirdParty() bool {
	if o != nil && o.ThirdParty != nil {
		return true
	}

	return false
}

// SetThirdParty gets a reference to the given bool and assigns it to the ThirdParty field.
func (o *ErrataResponseErrataList) SetThirdParty(v bool) {
	o.ThirdParty = &v
}

// GetRequiresReboot returns the RequiresReboot field value if set, zero value otherwise.
func (o *ErrataResponseErrataList) GetRequiresReboot() bool {
	if o == nil || o.RequiresReboot == nil {
		var ret bool
		return ret
	}
	return *o.RequiresReboot
}

// GetRequiresRebootOk returns a tuple with the RequiresReboot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrataResponseErrataList) GetRequiresRebootOk() (*bool, bool) {
	if o == nil || o.RequiresReboot == nil {
		return nil, false
	}
	return o.RequiresReboot, true
}

// HasRequiresReboot returns a boolean if a field has been set.
func (o *ErrataResponseErrataList) HasRequiresReboot() bool {
	if o != nil && o.RequiresReboot != nil {
		return true
	}

	return false
}

// SetRequiresReboot gets a reference to the given bool and assigns it to the RequiresReboot field.
func (o *ErrataResponseErrataList) SetRequiresReboot(v bool) {
	o.RequiresReboot = &v
}

func (o ErrataResponseErrataList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.Severity.IsSet() {
		toSerialize["severity"] = o.Severity.Get()
	}
	if o.ReferenceList != nil {
		toSerialize["reference_list"] = o.ReferenceList
	}
	if o.Issued != nil {
		toSerialize["issued"] = o.Issued
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Solution != nil {
		toSerialize["solution"] = o.Solution
	}
	if o.Summary != nil {
		toSerialize["summary"] = o.Summary
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Synopsis != nil {
		toSerialize["synopsis"] = o.Synopsis
	}
	if o.CveList != nil {
		toSerialize["cve_list"] = o.CveList
	}
	if o.BugzillaList != nil {
		toSerialize["bugzilla_list"] = o.BugzillaList
	}
	if o.PackageList != nil {
		toSerialize["package_list"] = o.PackageList
	}
	if o.SourcePackageList != nil {
		toSerialize["source_package_list"] = o.SourcePackageList
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.ThirdParty != nil {
		toSerialize["third_party"] = o.ThirdParty
	}
	if o.RequiresReboot != nil {
		toSerialize["requires_reboot"] = o.RequiresReboot
	}
	return json.Marshal(toSerialize)
}

type NullableErrataResponseErrataList struct {
	value *ErrataResponseErrataList
	isSet bool
}

func (v NullableErrataResponseErrataList) Get() *ErrataResponseErrataList {
	return v.value
}

func (v *NullableErrataResponseErrataList) Set(val *ErrataResponseErrataList) {
	v.value = val
	v.isSet = true
}

func (v NullableErrataResponseErrataList) IsSet() bool {
	return v.isSet
}

func (v *NullableErrataResponseErrataList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrataResponseErrataList(val *ErrataResponseErrataList) *NullableErrataResponseErrataList {
	return &NullableErrataResponseErrataList{value: val, isSet: true}
}

func (v NullableErrataResponseErrataList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrataResponseErrataList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


