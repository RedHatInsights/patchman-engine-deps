/*
 * VMaaS Webapp
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.27.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vmaas

import (
	"encoding/json"
)

// UpdatesV2ResponseAvailableUpdates struct for UpdatesV2ResponseAvailableUpdates
type UpdatesV2ResponseAvailableUpdates struct {
	Repository *string `json:"repository,omitempty"`
	Releasever *string `json:"releasever,omitempty"`
	Basearch *string `json:"basearch,omitempty"`
	Erratum *string `json:"erratum,omitempty"`
	Package *string `json:"package,omitempty"`
}

// NewUpdatesV2ResponseAvailableUpdates instantiates a new UpdatesV2ResponseAvailableUpdates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatesV2ResponseAvailableUpdates() *UpdatesV2ResponseAvailableUpdates {
	this := UpdatesV2ResponseAvailableUpdates{}
	return &this
}

// NewUpdatesV2ResponseAvailableUpdatesWithDefaults instantiates a new UpdatesV2ResponseAvailableUpdates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatesV2ResponseAvailableUpdatesWithDefaults() *UpdatesV2ResponseAvailableUpdates {
	this := UpdatesV2ResponseAvailableUpdates{}
	return &this
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *UpdatesV2ResponseAvailableUpdates) GetRepository() string {
	if o == nil || o.Repository == nil {
		var ret string
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatesV2ResponseAvailableUpdates) GetRepositoryOk() (*string, bool) {
	if o == nil || o.Repository == nil {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *UpdatesV2ResponseAvailableUpdates) HasRepository() bool {
	if o != nil && o.Repository != nil {
		return true
	}

	return false
}

// SetRepository gets a reference to the given string and assigns it to the Repository field.
func (o *UpdatesV2ResponseAvailableUpdates) SetRepository(v string) {
	o.Repository = &v
}

// GetReleasever returns the Releasever field value if set, zero value otherwise.
func (o *UpdatesV2ResponseAvailableUpdates) GetReleasever() string {
	if o == nil || o.Releasever == nil {
		var ret string
		return ret
	}
	return *o.Releasever
}

// GetReleaseverOk returns a tuple with the Releasever field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatesV2ResponseAvailableUpdates) GetReleaseverOk() (*string, bool) {
	if o == nil || o.Releasever == nil {
		return nil, false
	}
	return o.Releasever, true
}

// HasReleasever returns a boolean if a field has been set.
func (o *UpdatesV2ResponseAvailableUpdates) HasReleasever() bool {
	if o != nil && o.Releasever != nil {
		return true
	}

	return false
}

// SetReleasever gets a reference to the given string and assigns it to the Releasever field.
func (o *UpdatesV2ResponseAvailableUpdates) SetReleasever(v string) {
	o.Releasever = &v
}

// GetBasearch returns the Basearch field value if set, zero value otherwise.
func (o *UpdatesV2ResponseAvailableUpdates) GetBasearch() string {
	if o == nil || o.Basearch == nil {
		var ret string
		return ret
	}
	return *o.Basearch
}

// GetBasearchOk returns a tuple with the Basearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatesV2ResponseAvailableUpdates) GetBasearchOk() (*string, bool) {
	if o == nil || o.Basearch == nil {
		return nil, false
	}
	return o.Basearch, true
}

// HasBasearch returns a boolean if a field has been set.
func (o *UpdatesV2ResponseAvailableUpdates) HasBasearch() bool {
	if o != nil && o.Basearch != nil {
		return true
	}

	return false
}

// SetBasearch gets a reference to the given string and assigns it to the Basearch field.
func (o *UpdatesV2ResponseAvailableUpdates) SetBasearch(v string) {
	o.Basearch = &v
}

// GetErratum returns the Erratum field value if set, zero value otherwise.
func (o *UpdatesV2ResponseAvailableUpdates) GetErratum() string {
	if o == nil || o.Erratum == nil {
		var ret string
		return ret
	}
	return *o.Erratum
}

// GetErratumOk returns a tuple with the Erratum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatesV2ResponseAvailableUpdates) GetErratumOk() (*string, bool) {
	if o == nil || o.Erratum == nil {
		return nil, false
	}
	return o.Erratum, true
}

// HasErratum returns a boolean if a field has been set.
func (o *UpdatesV2ResponseAvailableUpdates) HasErratum() bool {
	if o != nil && o.Erratum != nil {
		return true
	}

	return false
}

// SetErratum gets a reference to the given string and assigns it to the Erratum field.
func (o *UpdatesV2ResponseAvailableUpdates) SetErratum(v string) {
	o.Erratum = &v
}

// GetPackage returns the Package field value if set, zero value otherwise.
func (o *UpdatesV2ResponseAvailableUpdates) GetPackage() string {
	if o == nil || o.Package == nil {
		var ret string
		return ret
	}
	return *o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatesV2ResponseAvailableUpdates) GetPackageOk() (*string, bool) {
	if o == nil || o.Package == nil {
		return nil, false
	}
	return o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *UpdatesV2ResponseAvailableUpdates) HasPackage() bool {
	if o != nil && o.Package != nil {
		return true
	}

	return false
}

// SetPackage gets a reference to the given string and assigns it to the Package field.
func (o *UpdatesV2ResponseAvailableUpdates) SetPackage(v string) {
	o.Package = &v
}

func (o UpdatesV2ResponseAvailableUpdates) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Repository != nil {
		toSerialize["repository"] = o.Repository
	}
	if o.Releasever != nil {
		toSerialize["releasever"] = o.Releasever
	}
	if o.Basearch != nil {
		toSerialize["basearch"] = o.Basearch
	}
	if o.Erratum != nil {
		toSerialize["erratum"] = o.Erratum
	}
	if o.Package != nil {
		toSerialize["package"] = o.Package
	}
	return json.Marshal(toSerialize)
}

type NullableUpdatesV2ResponseAvailableUpdates struct {
	value *UpdatesV2ResponseAvailableUpdates
	isSet bool
}

func (v NullableUpdatesV2ResponseAvailableUpdates) Get() *UpdatesV2ResponseAvailableUpdates {
	return v.value
}

func (v *NullableUpdatesV2ResponseAvailableUpdates) Set(val *UpdatesV2ResponseAvailableUpdates) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatesV2ResponseAvailableUpdates) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatesV2ResponseAvailableUpdates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatesV2ResponseAvailableUpdates(val *UpdatesV2ResponseAvailableUpdates) *NullableUpdatesV2ResponseAvailableUpdates {
	return &NullableUpdatesV2ResponseAvailableUpdates{value: val, isSet: true}
}

func (v NullableUpdatesV2ResponseAvailableUpdates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatesV2ResponseAvailableUpdates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


